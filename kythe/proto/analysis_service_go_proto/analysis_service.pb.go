// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.15.3
// source: kythe/proto/analysis_service.proto

package analysis_service_go_proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	analysis_go_proto "kythe.io/kythe/proto/analysis_go_proto"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

var File_kythe_proto_analysis_service_proto protoreflect.FileDescriptor

var file_kythe_proto_analysis_service_proto_rawDesc = []byte{
	0x0a, 0x22, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x6e,
	0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1a, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61,
	0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0x5f, 0x0a,
	0x13, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x61, 0x6c,
	0x79, 0x7a, 0x65, 0x72, 0x12, 0x48, 0x0a, 0x07, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x12,
	0x1c, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6e,
	0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6e, 0x61, 0x6c,
	0x79, 0x73, 0x69, 0x73, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x00, 0x30, 0x01, 0x32, 0x8d,
	0x01, 0x0a, 0x0f, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x3b, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x19, 0x2e, 0x6b, 0x79, 0x74, 0x68,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x00, 0x30, 0x01, 0x12,
	0x3d, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x15,
	0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x15, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x00, 0x42, 0x3c,
	0x0a, 0x1f, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x64, 0x65, 0x76,
	0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x2e, 0x6b, 0x79, 0x74, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x5a, 0x19, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x67, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var file_kythe_proto_analysis_service_proto_goTypes = []interface{}{
	(*analysis_go_proto.AnalysisRequest)(nil), // 0: kythe.proto.AnalysisRequest
	(*analysis_go_proto.FilesRequest)(nil),    // 1: kythe.proto.FilesRequest
	(*analysis_go_proto.FileInfo)(nil),        // 2: kythe.proto.FileInfo
	(*analysis_go_proto.AnalysisOutput)(nil),  // 3: kythe.proto.AnalysisOutput
	(*analysis_go_proto.FileData)(nil),        // 4: kythe.proto.FileData
}
var file_kythe_proto_analysis_service_proto_depIdxs = []int32{
	0, // 0: kythe.proto.CompilationAnalyzer.Analyze:input_type -> kythe.proto.AnalysisRequest
	1, // 1: kythe.proto.FileDataService.Get:input_type -> kythe.proto.FilesRequest
	2, // 2: kythe.proto.FileDataService.GetFileData:input_type -> kythe.proto.FileInfo
	3, // 3: kythe.proto.CompilationAnalyzer.Analyze:output_type -> kythe.proto.AnalysisOutput
	4, // 4: kythe.proto.FileDataService.Get:output_type -> kythe.proto.FileData
	4, // 5: kythe.proto.FileDataService.GetFileData:output_type -> kythe.proto.FileData
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_kythe_proto_analysis_service_proto_init() }
func file_kythe_proto_analysis_service_proto_init() {
	if File_kythe_proto_analysis_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kythe_proto_analysis_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_kythe_proto_analysis_service_proto_goTypes,
		DependencyIndexes: file_kythe_proto_analysis_service_proto_depIdxs,
	}.Build()
	File_kythe_proto_analysis_service_proto = out.File
	file_kythe_proto_analysis_service_proto_rawDesc = nil
	file_kythe_proto_analysis_service_proto_goTypes = nil
	file_kythe_proto_analysis_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CompilationAnalyzerClient is the client API for CompilationAnalyzer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CompilationAnalyzerClient interface {
	Analyze(ctx context.Context, in *analysis_go_proto.AnalysisRequest, opts ...grpc.CallOption) (CompilationAnalyzer_AnalyzeClient, error)
}

type compilationAnalyzerClient struct {
	cc grpc.ClientConnInterface
}

func NewCompilationAnalyzerClient(cc grpc.ClientConnInterface) CompilationAnalyzerClient {
	return &compilationAnalyzerClient{cc}
}

func (c *compilationAnalyzerClient) Analyze(ctx context.Context, in *analysis_go_proto.AnalysisRequest, opts ...grpc.CallOption) (CompilationAnalyzer_AnalyzeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CompilationAnalyzer_serviceDesc.Streams[0], "/kythe.proto.CompilationAnalyzer/Analyze", opts...)
	if err != nil {
		return nil, err
	}
	x := &compilationAnalyzerAnalyzeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CompilationAnalyzer_AnalyzeClient interface {
	Recv() (*analysis_go_proto.AnalysisOutput, error)
	grpc.ClientStream
}

type compilationAnalyzerAnalyzeClient struct {
	grpc.ClientStream
}

func (x *compilationAnalyzerAnalyzeClient) Recv() (*analysis_go_proto.AnalysisOutput, error) {
	m := new(analysis_go_proto.AnalysisOutput)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// CompilationAnalyzerServer is the server API for CompilationAnalyzer service.
type CompilationAnalyzerServer interface {
	Analyze(*analysis_go_proto.AnalysisRequest, CompilationAnalyzer_AnalyzeServer) error
}

// UnimplementedCompilationAnalyzerServer can be embedded to have forward compatible implementations.
type UnimplementedCompilationAnalyzerServer struct {
}

func (*UnimplementedCompilationAnalyzerServer) Analyze(*analysis_go_proto.AnalysisRequest, CompilationAnalyzer_AnalyzeServer) error {
	return status.Errorf(codes.Unimplemented, "method Analyze not implemented")
}

func RegisterCompilationAnalyzerServer(s *grpc.Server, srv CompilationAnalyzerServer) {
	s.RegisterService(&_CompilationAnalyzer_serviceDesc, srv)
}

func _CompilationAnalyzer_Analyze_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(analysis_go_proto.AnalysisRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CompilationAnalyzerServer).Analyze(m, &compilationAnalyzerAnalyzeServer{stream})
}

type CompilationAnalyzer_AnalyzeServer interface {
	Send(*analysis_go_proto.AnalysisOutput) error
	grpc.ServerStream
}

type compilationAnalyzerAnalyzeServer struct {
	grpc.ServerStream
}

func (x *compilationAnalyzerAnalyzeServer) Send(m *analysis_go_proto.AnalysisOutput) error {
	return x.ServerStream.SendMsg(m)
}

var _CompilationAnalyzer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kythe.proto.CompilationAnalyzer",
	HandlerType: (*CompilationAnalyzerServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Analyze",
			Handler:       _CompilationAnalyzer_Analyze_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "kythe/proto/analysis_service.proto",
}

// FileDataServiceClient is the client API for FileDataService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FileDataServiceClient interface {
	Get(ctx context.Context, in *analysis_go_proto.FilesRequest, opts ...grpc.CallOption) (FileDataService_GetClient, error)
	GetFileData(ctx context.Context, in *analysis_go_proto.FileInfo, opts ...grpc.CallOption) (*analysis_go_proto.FileData, error)
}

type fileDataServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFileDataServiceClient(cc grpc.ClientConnInterface) FileDataServiceClient {
	return &fileDataServiceClient{cc}
}

func (c *fileDataServiceClient) Get(ctx context.Context, in *analysis_go_proto.FilesRequest, opts ...grpc.CallOption) (FileDataService_GetClient, error) {
	stream, err := c.cc.NewStream(ctx, &_FileDataService_serviceDesc.Streams[0], "/kythe.proto.FileDataService/Get", opts...)
	if err != nil {
		return nil, err
	}
	x := &fileDataServiceGetClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type FileDataService_GetClient interface {
	Recv() (*analysis_go_proto.FileData, error)
	grpc.ClientStream
}

type fileDataServiceGetClient struct {
	grpc.ClientStream
}

func (x *fileDataServiceGetClient) Recv() (*analysis_go_proto.FileData, error) {
	m := new(analysis_go_proto.FileData)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *fileDataServiceClient) GetFileData(ctx context.Context, in *analysis_go_proto.FileInfo, opts ...grpc.CallOption) (*analysis_go_proto.FileData, error) {
	out := new(analysis_go_proto.FileData)
	err := c.cc.Invoke(ctx, "/kythe.proto.FileDataService/GetFileData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FileDataServiceServer is the server API for FileDataService service.
type FileDataServiceServer interface {
	Get(*analysis_go_proto.FilesRequest, FileDataService_GetServer) error
	GetFileData(context.Context, *analysis_go_proto.FileInfo) (*analysis_go_proto.FileData, error)
}

// UnimplementedFileDataServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFileDataServiceServer struct {
}

func (*UnimplementedFileDataServiceServer) Get(*analysis_go_proto.FilesRequest, FileDataService_GetServer) error {
	return status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedFileDataServiceServer) GetFileData(context.Context, *analysis_go_proto.FileInfo) (*analysis_go_proto.FileData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFileData not implemented")
}

func RegisterFileDataServiceServer(s *grpc.Server, srv FileDataServiceServer) {
	s.RegisterService(&_FileDataService_serviceDesc, srv)
}

func _FileDataService_Get_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(analysis_go_proto.FilesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(FileDataServiceServer).Get(m, &fileDataServiceGetServer{stream})
}

type FileDataService_GetServer interface {
	Send(*analysis_go_proto.FileData) error
	grpc.ServerStream
}

type fileDataServiceGetServer struct {
	grpc.ServerStream
}

func (x *fileDataServiceGetServer) Send(m *analysis_go_proto.FileData) error {
	return x.ServerStream.SendMsg(m)
}

func _FileDataService_GetFileData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(analysis_go_proto.FileInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileDataServiceServer).GetFileData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kythe.proto.FileDataService/GetFileData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileDataServiceServer).GetFileData(ctx, req.(*analysis_go_proto.FileInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _FileDataService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kythe.proto.FileDataService",
	HandlerType: (*FileDataServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFileData",
			Handler:    _FileDataService_GetFileData_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Get",
			Handler:       _FileDataService_Get_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "kythe/proto/analysis_service.proto",
}
